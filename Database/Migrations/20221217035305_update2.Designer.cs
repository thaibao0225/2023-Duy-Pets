// <auto-generated />
using System;
using Database.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221217035305_update2")]
    partial class update2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Database.Entities.Bills", b =>
                {
                    b.Property<string>("bill_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_Cancel")
                        .HasColumnType("bit");

                    b.Property<DateTime>("bill_StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("bill_StatusPayment")
                        .HasColumnType("bit");

                    b.Property<bool>("bill_StatusReviceOrder")
                        .HasColumnType("bit");

                    b.Property<int>("bill_Total")
                        .HasColumnType("int");

                    b.Property<string>("bill_UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("bill_checkout")
                        .HasColumnType("bit");

                    b.HasKey("bill_Id");

                    b.HasIndex("bill_UserId");

                    b.ToTable("Bills", (string)null);
                });

            modelBuilder.Entity("Database.Entities.IntroducePage", b =>
                {
                    b.Property<string>("introduce_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("introduce_Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Address2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Address3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Map1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Map2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Map3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("introduce_UserCreate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("introduce_Zalo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("introduce_Id");

                    b.HasIndex("introduce_UserCreate");

                    b.ToTable("IntroducePage", (string)null);
                });

            modelBuilder.Entity("Database.Entities.PetCategories", b =>
                {
                    b.Property<string>("pc_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pc_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pc_IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("pc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pc_Id");

                    b.ToTable("PetCategories", (string)null);

                    b.HasData(
                        new
                        {
                            pc_Id = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pc_Description = "Guard dog",
                            pc_IsDelete = false,
                            pc_Name = "Guard dog"
                        },
                        new
                        {
                            pc_Id = "d291421a-5207-4bc4-a6d9-80be22052490",
                            pc_Description = "Sheepdogs",
                            pc_IsDelete = false,
                            pc_Name = "Sheepdogs"
                        },
                        new
                        {
                            pc_Id = "271b2db7-db4e-406f-b74a-9a2e4a734076",
                            pc_Description = " Sled dogs",
                            pc_IsDelete = false,
                            pc_Name = " Sled dogs"
                        },
                        new
                        {
                            pc_Id = "6140e7d0-d792-4633-ad10-095a216b82ff",
                            pc_Description = "Hound",
                            pc_IsDelete = false,
                            pc_Name = "Hound"
                        });
                });

            modelBuilder.Entity("Database.Entities.Pets", b =>
                {
                    b.Property<string>("pet_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pet_CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pet_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_ImgUrl1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_ImgUrl2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_ImgUrl3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_ImgUrl4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("pet_IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("pet_Lifespan")
                        .HasColumnType("float");

                    b.Property<string>("pet_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_Origin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pet_OrtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("pet_Price")
                        .HasColumnType("float");

                    b.Property<double>("pet_Weight")
                        .HasColumnType("float");

                    b.HasKey("pet_Id");

                    b.HasIndex("pet_CategoryId");

                    b.ToTable("Pets", (string)null);

                    b.HasData(
                        new
                        {
                            pet_Id = "55d2238d-ae9b-4faf-8d7d-a3662775ff25",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "AKITA INU",
                            pet_ImgUrl1 = "image/giongcho/akita-inu.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-cooker.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 10.0,
                            pet_Name = "AKITA INU",
                            pet_Origin = "Japan",
                            pet_OrtherName = "AKITA INU",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "d8daa93b-5bdf-4c11-b874-1fdcdc2987e7",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "BECGIE Belgium (MALINOIS)",
                            pet_ImgUrl1 = "image/giongcho/becgie-bi.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-dobermann-2thang.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 10.0,
                            pet_Name = "BECGIE Belgium (MALINOIS)",
                            pet_Origin = "BECGIE Belgium (MALINOIS)",
                            pet_OrtherName = "BECGIE Belgium (MALINOIS)",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "252d8ff9-1cfc-4388-9b4c-619bd813c591",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "BECGIE Germany",
                            pet_ImgUrl1 = "image/giongcho/becgie-duc.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-poodle-rautrang.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 10.0,
                            pet_Name = "BECGIE Germany",
                            pet_Origin = "BECGIE Germany",
                            pet_OrtherName = "BECGIE Germany",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "1f621e18-9d13-4ddf-949d-0dbd0964f669",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "BORDER COLLIE",
                            pet_ImgUrl1 = "image/giongcho/BORDER-COLLIE.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-phochuouden.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "BORDER COLLIE",
                            pet_Origin = "BORDER COLLIE",
                            pet_OrtherName = "BORDER COLLIE",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "ea238fdc-9779-4141-aa39-e7ec7b4b50ee",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "BULL France",
                            pet_ImgUrl1 = "image/giongcho/bull-phap.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-daingaohusky.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "BULL France",
                            pet_Origin = "BULL France",
                            pet_OrtherName = "BULL France",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "3e6cf3ae-92b1-4749-9081-8880cd278d9a",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "BULLDOG",
                            pet_ImgUrl1 = "image/giongcho/bulldog.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-hoangtutuyetsamoyed.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "BULLDOG",
                            pet_Origin = "BULLDOG",
                            pet_OrtherName = "BULLDOG",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "0cbda2ee-38fb-48d0-9873-62bbada1fcf4",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "BULLY AMERICAN",
                            pet_ImgUrl1 = "image/giongcho/bully-american.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-bordercolliecongchua.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "BULLY AMERICAN",
                            pet_Origin = "BULLY AMERICAN",
                            pet_OrtherName = "BULLY AMERICAN",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "0a3ca006-2777-4ba7-8058-51cd1818b240",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "CHIHUAHUA",
                            pet_ImgUrl1 = "image/giongcho/chihuahua.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-phosocnhonhan.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "CHIHUAHUA",
                            pet_Origin = "CHIHUAHUA",
                            pet_OrtherName = "CHIHUAHUA",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "e3b99870-90d8-4b98-a58d-66aa3aec6895",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "Dalmatian",
                            pet_ImgUrl1 = "image/giongcho/cho-dom.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-cogaipitbull.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Dalmatian",
                            pet_Origin = "Dalmatian",
                            pet_OrtherName = "Dalmatian",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "5dd440bc-aee6-445b-9ed7-03f605c00844",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "CHOW CHOW",
                            pet_ImgUrl1 = "image/giongcho/chow-chow.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-bordercolliemui2.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "CHOW CHOW",
                            pet_Origin = "CHOW CHOW",
                            pet_OrtherName = "CHOW CHOW",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "1e28eb36-5db3-492e-9745-070220bf98da",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "CORGI",
                            pet_ImgUrl1 = "image/giongcho/corgy.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-goodboyrottweiler.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "CORGI",
                            pet_Origin = "CORGI",
                            pet_OrtherName = "CORGI",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "c82909ad-6ccd-4546-a873-e9baaff7009b",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "DOBERMANN",
                            pet_ImgUrl1 = "image/giongcho/dobermann.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-hotboylabrador.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "DOBERMANN",
                            pet_Origin = "DOBERMANN",
                            pet_OrtherName = "DOBERMANN",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "1c3c58f0-d99a-461e-bb3f-33fa6a8f8b51",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "GOLDEN RETRIEVER",
                            pet_ImgUrl1 = "image/giongcho/golden-retriever.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-becgieduc.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "GOLDEN RETRIEVER",
                            pet_Origin = "GOLDEN RETRIEVER",
                            pet_OrtherName = "GOLDEN RETRIEVER",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "8565d1ff-6c23-4dbb-8ee7-27c6ad7462ae",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "GREAT DANE",
                            pet_ImgUrl1 = "image/giongcho/great-dane.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-lapxuongsocola.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "GREAT DANE",
                            pet_Origin = "GREAT DANE",
                            pet_OrtherName = "GREAT DANE",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "6e73fb21-d3e0-4775-baff-18b34a384315",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "H'Mong Coc",
                            pet_ImgUrl1 = "image/giongcho/mong-coc.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-phochuoutimsen.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "H'Mong Coc",
                            pet_Origin = "H'Mong Coc",
                            pet_OrtherName = "H'Mong Coc",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "23b898df-f548-4510-aa74-f7c924b6efc5",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "AKITA INU",
                            pet_ImgUrl1 = "image/giongcho/akita-inu.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-goldenretriever.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "AKITA INU",
                            pet_Origin = "AKITA INU",
                            pet_OrtherName = "AKITA INU",
                            pet_Price = 100.0,
                            pet_Weight = 32.0
                        },
                        new
                        {
                            pet_Id = "4c1bd2ee-1754-462b-aac6-fc646fcf907c",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "ALASKA",
                            pet_ImgUrl1 = "image/giongcho/alaska.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-alaskamummim.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "ALASKA",
                            pet_Origin = "ALASKA",
                            pet_OrtherName = "ALASKA",
                            pet_Price = 100.0,
                            pet_Weight = 23.0
                        },
                        new
                        {
                            pet_Id = "ad11acf6-7fa2-44c7-bd60-756c0104a917",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "BĂC HÀ",
                            pet_ImgUrl1 = "image/giongcho/chobacha.png",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-bulldogmapmapa.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "BĂC HÀ",
                            pet_Origin = "BĂC HÀ",
                            pet_OrtherName = "BĂC HÀ",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "a6fe488c-897b-47b7-8158-8b52909bd7b0",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "Pekingese",
                            pet_ImgUrl1 = "image/giongcho/chobackinh.png",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-chowchow.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Pekingese",
                            pet_Origin = "Pekingese",
                            pet_OrtherName = "Pekingese",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "394d30cd-d40b-41eb-aae1-6c2881ce834d",
                            pet_CategoryId = "d291421a-5207-4bc4-a6d9-80be22052490",
                            pet_Description = "Dalmatian",
                            pet_ImgUrl1 = "image/giongcho/cho-dom.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-cocker.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Dalmatian",
                            pet_Origin = "Dalmatian",
                            pet_OrtherName = "Dalmatian",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "099b4291-114c-4b72-868f-730cac3e921c",
                            pet_CategoryId = "d291421a-5207-4bc4-a6d9-80be22052490",
                            pet_Description = "Japan Dog",
                            pet_ImgUrl1 = "image/giongcho/chonhatban.png",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-pugdangyeu.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Japan Dog",
                            pet_Origin = "Japan Dog",
                            pet_OrtherName = "Japan Dog",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "e8e50293-c847-4a09-b91a-414aa0e74fdc",
                            pet_CategoryId = "271b2db7-db4e-406f-b74a-9a2e4a734076",
                            pet_Description = "Tibetan Clams",
                            pet_ImgUrl1 = "image/giongcho/ngaottang.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-golden1.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Tibetan Clams",
                            pet_Origin = "Tibetan Clams",
                            pet_OrtherName = "Tibetan Clams",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "1acfb1c4-cfac-4a29-aa62-fd275ab2438d",
                            pet_CategoryId = "d291421a-5207-4bc4-a6d9-80be22052490",
                            pet_Description = "Deer Pug dog",
                            pet_ImgUrl1 = "image/giongcho/phoc-huou.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-poodlecuoituoi.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Deer Pug dog",
                            pet_Origin = "Deer Pug dog",
                            pet_OrtherName = "Deer Pug dog",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "94ea996a-b683-471d-8bac-88f9983f6f2c",
                            pet_CategoryId = "271b2db7-db4e-406f-b74a-9a2e4a734076",
                            pet_Description = "Phoc squirrel dog",
                            pet_ImgUrl1 = "image/giongcho/phoc-soc.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-chuboss.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Phoc squirrel dog",
                            pet_Origin = "Phoc squirrel dog",
                            pet_OrtherName = "Phoc squirrel dog",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "353b00b8-eebd-4462-8fbb-b429cf914562",
                            pet_CategoryId = "271b2db7-db4e-406f-b74a-9a2e4a734076",
                            pet_Description = "Phu Quoc dogs",
                            pet_ImgUrl1 = "image/giongcho/phu-quoc.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-becgiehalan.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "Phu Quoc dogs",
                            pet_Origin = "Phu Quoc dogs",
                            pet_OrtherName = "Phu Quoc dogs",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "4936e2bc-7b99-407d-9a18-143805406f4d",
                            pet_CategoryId = "271b2db7-db4e-406f-b74a-9a2e4a734076",
                            pet_Description = "PITBULL",
                            pet_ImgUrl1 = "image/giongcho/pitbull.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-corgi.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "PITBULL",
                            pet_Origin = "PITBULL",
                            pet_OrtherName = "PITBULL",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        },
                        new
                        {
                            pet_Id = "3154c005-ea95-4388-b9ce-145b6e70100c",
                            pet_CategoryId = "e1a6a007-143f-403c-a7a5-6cb31fae0b48",
                            pet_Description = "SHIBA INU ",
                            pet_ImgUrl1 = "image/giongcho/shiba.jpg",
                            pet_ImgUrl2 = "",
                            pet_ImgUrl3 = "",
                            pet_ImgUrl4 = "image/cuncon/cuncon-phochuou.jpg",
                            pet_IsDelete = false,
                            pet_Lifespan = 12.0,
                            pet_Name = "SHIBA INU ",
                            pet_Origin = "SHIBA INU ",
                            pet_OrtherName = "SHIBA INU ",
                            pet_Price = 100.0,
                            pet_Weight = 33.0
                        });
                });

            modelBuilder.Entity("Database.Entities.PettInBill", b =>
                {
                    b.Property<string>("pib_PetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pib_BillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("pib_Price")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pib_Quantity")
                        .HasColumnType("int");

                    b.HasKey("pib_PetId", "pib_BillId");

                    b.HasIndex("pib_BillId");

                    b.ToTable("PettInBill", (string)null);
                });

            modelBuilder.Entity("Database.Entities.ProductCategories", b =>
                {
                    b.Property<string>("proc_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("proc_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("proc_IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("proc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("proc_Id");

                    b.ToTable("ProductCategories", (string)null);

                    b.HasData(
                        new
                        {
                            proc_Id = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            proc_Description = "newCategories_Id1",
                            proc_IsDelete = false,
                            proc_Name = "newCategories_Id1"
                        },
                        new
                        {
                            proc_Id = "c15af438-614a-4904-bcf4-dea8370b035b",
                            proc_Description = "newCategories_Id2",
                            proc_IsDelete = false,
                            proc_Name = "newCategories_Id2"
                        },
                        new
                        {
                            proc_Id = "4a4c04be-377d-4dc1-acd1-ea2dafd6e0a9",
                            proc_Description = "newCategories_Id3",
                            proc_IsDelete = false,
                            proc_Name = "newCategories_Id3"
                        });
                });

            modelBuilder.Entity("Database.Entities.ProductInBill", b =>
                {
                    b.Property<string>("proib_ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("proib_BillId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("proib_IsDelete")
                        .HasColumnType("bit");

                    b.Property<double>("proib_Price")
                        .HasColumnType("float");

                    b.Property<double>("proib_Quantity")
                        .HasColumnType("float");

                    b.HasKey("proib_ProductId", "proib_BillId");

                    b.HasIndex("proib_BillId");

                    b.ToTable("ProductInBill", (string)null);
                });

            modelBuilder.Entity("Database.Entities.Products", b =>
                {
                    b.Property<string>("product_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("product_Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("product_Img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("product_IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("product_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("product_Price")
                        .HasColumnType("float");

                    b.Property<double>("product_Rate")
                        .HasColumnType("float");

                    b.Property<double>("product_ReProducePrice")
                        .HasColumnType("float");

                    b.HasKey("product_Id");

                    b.HasIndex("product_CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            product_Id = "73c4520b-7929-4115-b3fa-b9993a791e15",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Transparent Backpack For Dogs and Cats",
                            product_Img = "image/phukien/phukien-balotrongsuot.png",
                            product_IsDelete = false,
                            product_Name = "Transparent Backpack For Dogs and Cats",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "20157dbd-1062-4689-ba2f-291f9b5c8d08",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Training Whistle",
                            product_Img = "image/phukien/phukien-coihuanluyen.png",
                            product_IsDelete = false,
                            product_Name = "Training Whistle",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "fd74e801-1b40-4778-82d4-89396339545a",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Lamb Sticks",
                            product_Img = "image/phukien/phukien-thitcuuque.png",
                            product_IsDelete = false,
                            product_Name = "Lamb Sticks",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "f6f14641-0daa-4ab5-85c8-8c6edf4e9819",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "SmartHeart For Small Dogs",
                            product_Img = "image/phukien/phukien-SmartHeart.png",
                            product_IsDelete = false,
                            product_Name = "SmartHeart For Small Dogs",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "0205bfa6-0897-4834-bdf3-18f01f071249",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Bonus Cake Tablets",
                            product_Img = "image/phukien/phukien-banhthuong.png",
                            product_IsDelete = false,
                            product_Name = "Bonus Cake Tablets",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "89a34909-ac84-4332-a4f7-7905b36cef90",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Royal Canin For Adult Dogs",
                            product_Img = "image/phukien/phukien-royal_truongthanh.png",
                            product_IsDelete = false,
                            product_Name = "Royal Canin For Adult Dogs",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "8c282144-4c8b-4181-b0be-3144f0848b25",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Pair of Bows",
                            product_Img = "image/phukien/phukien-capno.png",
                            product_IsDelete = false,
                            product_Name = "Pair of Bows",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "3cac8477-af62-40bc-b035-14c4a8949e27",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Princess Lace Scarf",
                            product_Img = "image/phukien/phukien-khanren.png",
                            product_IsDelete = false,
                            product_Name = "Princess Lace Scarf",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "d34e220a-3b79-46ab-9507-af5472583587",
                            product_CategoryId = "a659146c-be6c-4f7b-bef8-6582a36c5b40",
                            product_Description = "Drugs of Calcium",
                            product_Img = "image/phukien/phukien-thuoccanxi.png",
                            product_IsDelete = false,
                            product_Name = "Drugs of Calcium",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "262e1712-7106-44d5-9ae7-870b3dd25093",
                            product_CategoryId = "c15af438-614a-4904-bcf4-dea8370b035b",
                            product_Description = "Bow Bow Bra",
                            product_Img = "image/phukien/phukien-aongucnochuong.png",
                            product_IsDelete = false,
                            product_Name = "Bow Bow Bra",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "2e17248b-ed23-476d-8811-ffe7b967b31f",
                            product_CategoryId = "c15af438-614a-4904-bcf4-dea8370b035b",
                            product_Description = "Balloon Toys",
                            product_Img = "image/phukien/phukien-bongbongdochoi.png",
                            product_IsDelete = false,
                            product_Name = "Balloon Toys",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "3205e272-a0d6-4107-a163-f4b2d0c118d2",
                            product_CategoryId = "c15af438-614a-4904-bcf4-dea8370b035b",
                            product_Description = "Dog Fence",
                            product_Img = "image/phukien/phukien-raoquaycho.png",
                            product_IsDelete = false,
                            product_Name = "Dog Fence",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "1d10712b-aae5-4894-88db-11b757b88b5e",
                            product_CategoryId = "c15af438-614a-4904-bcf4-dea8370b035b",
                            product_Description = "BLOOM SEXY Fragrance Bath Oil",
                            product_Img = "image/phukien/phukien-dautamnuochoabloomsexy.png",
                            product_IsDelete = false,
                            product_Name = "BLOOM SEXY Fragrance Bath Oil",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "ef77bf96-71a3-4a5a-9010-630617a191fe",
                            product_CategoryId = "c15af438-614a-4904-bcf4-dea8370b035b",
                            product_Description = "Toys",
                            product_Img = "image/phukien/phukien-dochoi.png",
                            product_IsDelete = false,
                            product_Name = "Toys",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "08807701-db1d-444d-980a-6ec6b58961ef",
                            product_CategoryId = "c15af438-614a-4904-bcf4-dea8370b035b",
                            product_Description = "BLOOM SEXY Fragrance Bath Oil",
                            product_Img = "image/phukien/phukien-dautamFay.png",
                            product_IsDelete = false,
                            product_Name = "BLOOM SEXY Fragrance Bath Oil",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "8ba2d50e-8e2d-44c6-acd4-bc61c751ad39",
                            product_CategoryId = "c15af438-614a-4904-bcf4-dea8370b035b",
                            product_Description = "Anti-Tear Syrup",
                            product_Img = "image/phukien/phukien-sirochongchaynuocmat.png",
                            product_IsDelete = false,
                            product_Name = "Anti-Tear Syrup",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "933377b3-8740-492a-a341-51f7dfa9de90",
                            product_CategoryId = "4a4c04be-377d-4dc1-acd1-ea2dafd6e0a9",
                            product_Description = "Lice Treatment Ring",
                            product_Img = "image/phukien/phukien-vongtriveran.png",
                            product_IsDelete = false,
                            product_Name = "Lice Treatment Ring",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "adb42468-dc72-4541-8ead-f4711862aec4",
                            product_CategoryId = "4a4c04be-377d-4dc1-acd1-ea2dafd6e0a9",
                            product_Description = "HANTOC Lice Spray",
                            product_Img = "image/phukien/phukien-xitveranHANTOC.png",
                            product_IsDelete = false,
                            product_Name = "HANTOC Lice Spray",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "cb19da6b-81d2-496b-84e7-3529e5a8db75",
                            product_CategoryId = "4a4c04be-377d-4dc1-acd1-ea2dafd6e0a9",
                            product_Description = ">Nutri-Nutrition Gel",
                            product_Img = "image/phukien/phukien-gelddNutri.png",
                            product_IsDelete = false,
                            product_Name = ">Nutri-Nutrition Gel",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "2221722d-cab1-482d-adf0-436407a42a71",
                            product_CategoryId = "4a4c04be-377d-4dc1-acd1-ea2dafd6e0a9",
                            product_Description = "Bio Milk Powder For Dogs and Cats",
                            product_Img = "image/phukien/phukien-suabotchomeo.png",
                            product_IsDelete = false,
                            product_Name = "Bio Milk Powder For Dogs and Cats",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "1c8b42f1-d816-4efe-b27a-6b6e6225ca11",
                            product_CategoryId = "4a4c04be-377d-4dc1-acd1-ea2dafd6e0a9",
                            product_Description = "Sleeky Multivitamin",
                            product_Img = "image/phukien/phukien-vitamintonghop.png",
                            product_IsDelete = false,
                            product_Name = "Sleeky Multivitamin",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        },
                        new
                        {
                            product_Id = "acaf0cf2-bc5b-4f2a-b537-b862c97909be",
                            product_CategoryId = "4a4c04be-377d-4dc1-acd1-ea2dafd6e0a9",
                            product_Description = "Canxi Nano",
                            product_Img = "image/phukien/phukien-canxinano.png",
                            product_IsDelete = false,
                            product_Name = "Canxi Nano",
                            product_Price = 10.0,
                            product_Rate = 1.0,
                            product_ReProducePrice = 1.0
                        });
                });

            modelBuilder.Entity("Database.Entities.UserContact", b =>
                {
                    b.Property<string>("uc_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("uc_Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_IsDelete")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_UserCreate")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("uc_Id");

                    b.HasIndex("uc_UserCreate");

                    b.ToTable("UserContact", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityRole");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "033d4a53-1c8c-415e-b437-7175369b2aa1",
                            RoleId = "ba1bd306-63f7-4d23-a7ff-d3247fe7f9f5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Database.Entities.Roles", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityRole");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.ToTable("Roles");

                    b.HasDiscriminator().HasValue("Roles");

                    b.HasData(
                        new
                        {
                            Id = "ba1bd306-63f7-4d23-a7ff-d3247fe7f9f5",
                            ConcurrencyStamp = "7ee0f4d9-3906-4354-a4ca-34f58a2f0a62",
                            Name = "ADMIN",
                            NormalizedName = "admin",
                            Description = "admin",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("Database.Entities.Users", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<DateTime>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isDelete")
                        .HasColumnType("bit");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("Users");

                    b.HasData(
                        new
                        {
                            Id = "033d4a53-1c8c-415e-b437-7175369b2aa1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2610726a-6414-4124-a0b0-b96339595f0a",
                            Email = "staff@gmail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "STAFF@GMAIL.COM",
                            NormalizedUserName = "STAFF@GMAIL.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEK5Htr11WN7/t2zNLhsCuwJm+ca9Hkugd3pK7s4BGVofmwwEUH7gHzS+HiuFieWlzw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4e0e3024-4ac9-4ae8-8b92-080bac4494a8",
                            TwoFactorEnabled = false,
                            UserName = "Staft",
                            DoB = new DateTime(2022, 12, 17, 10, 53, 4, 702, DateTimeKind.Local).AddTicks(5771),
                            FirstName = "FirstName",
                            LastName = "LastName",
                            isDelete = false
                        });
                });

            modelBuilder.Entity("Database.Entities.Bills", b =>
                {
                    b.HasOne("Database.Entities.Users", "Users")
                        .WithMany("bill")
                        .HasForeignKey("bill_UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Database.Entities.IntroducePage", b =>
                {
                    b.HasOne("Database.Entities.Users", "users")
                        .WithMany("introducePage")
                        .HasForeignKey("introduce_UserCreate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("Database.Entities.Pets", b =>
                {
                    b.HasOne("Database.Entities.PetCategories", "petCategories")
                        .WithMany("pets")
                        .HasForeignKey("pet_CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("petCategories");
                });

            modelBuilder.Entity("Database.Entities.PettInBill", b =>
                {
                    b.HasOne("Database.Entities.Bills", "bills")
                        .WithMany("pettInBill")
                        .HasForeignKey("pib_BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Pets", "pets")
                        .WithMany("pettInBill")
                        .HasForeignKey("pib_PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bills");

                    b.Navigation("pets");
                });

            modelBuilder.Entity("Database.Entities.ProductInBill", b =>
                {
                    b.HasOne("Database.Entities.Bills", "bills")
                        .WithMany("productInBill")
                        .HasForeignKey("proib_BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Database.Entities.Products", "products")
                        .WithMany("productInBill")
                        .HasForeignKey("proib_ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bills");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Database.Entities.Products", b =>
                {
                    b.HasOne("Database.Entities.ProductCategories", "productCategories")
                        .WithMany("products")
                        .HasForeignKey("product_CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productCategories");
                });

            modelBuilder.Entity("Database.Entities.UserContact", b =>
                {
                    b.HasOne("Database.Entities.Users", "users")
                        .WithMany("userContact")
                        .HasForeignKey("uc_UserCreate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Entities.Bills", b =>
                {
                    b.Navigation("pettInBill");

                    b.Navigation("productInBill");
                });

            modelBuilder.Entity("Database.Entities.PetCategories", b =>
                {
                    b.Navigation("pets");
                });

            modelBuilder.Entity("Database.Entities.Pets", b =>
                {
                    b.Navigation("pettInBill");
                });

            modelBuilder.Entity("Database.Entities.ProductCategories", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Database.Entities.Products", b =>
                {
                    b.Navigation("productInBill");
                });

            modelBuilder.Entity("Database.Entities.Users", b =>
                {
                    b.Navigation("bill");

                    b.Navigation("introducePage");

                    b.Navigation("userContact");
                });
#pragma warning restore 612, 618
        }
    }
}
